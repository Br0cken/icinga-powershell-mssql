object CheckCommand "Invoke-IcingaCheckMSSQLHealth" {
    import "PowerShell Base"

    arguments += {
        "-C" = {
            value = "try { Use-Icinga; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; exit 3; }; Exit-IcingaPluginNotInstalled 'Invoke-IcingaCheckMSSQLHealth'; exit Invoke-IcingaCheckMSSQLHealth"
            order = 0
        }
        "-SqlUsername" = {
            description = "The username for connecting to the MSSQL database"
            value = "$IcingaCheckMSSQLHealth_String_SqlUsername$"
            order = 5
        }
        "-Warning" = {
            description = "The warning threshold for the connection time to the MSSQL database as time interval (ms, s, h, m)"
            value = "$IcingaCheckMSSQLHealth_Object_Warning$"
            order = 2
        }
        "-SqlPassword" = {
            description = "The password for connecting to the MSSQL database as secure string"
            value = "(ConvertTo-IcingaSecureString '$IcingaCheckMSSQLHealth_Securestring_SqlPassword$')"
            order = 6
        }
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state"
            value = "$IcingaCheckMSSQLHealth_Int32_Verbosity$"
            order = 10
        }
        "-SqlPort" = {
            description = "The port of the MSSQL server/instance to connect to with the provided credentials"
            value = "$IcingaCheckMSSQLHealth_Int32_SqlPort$"
            order = 8
        }
        "-Critical" = {
            description = "The warning threshold for the connection time to the MSSQL database as time interval (ms, s, h, m)"
            value = "$IcingaCheckMSSQLHealth_Object_Critical$"
            order = 3
        }
        "-SqlDatabase" = {
            description = "The name of a specific database to connect to. Leave empty to connect 'globally'"
            value = "$IcingaCheckMSSQLHealth_String_SqlDatabase$"
            order = 9
        }
        "-Instance" = {
            description = "The name of the database instance to check the service state for. Can either the MSSQL$DB1 or simply DB1 for example"
            value = "$IcingaCheckMSSQLHealth_String_Instance$"
            order = 4
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckMSSQLHealth_Switchparameter_NoPerfData$"
            set_if_format = "string"
            order = 99
        }
        "-SqlHost" = {
            description = "The IP address or FQDN to the MSSQL server to connect to"
            value = "$IcingaCheckMSSQLHealth_String_SqlHost$"
            order = 7
        }
        "-IntegratedSecurity" = {
            set_if = "$IcingaCheckMSSQLHealth_Switchparameter_IntegratedSecurity$"
            set_if_format = "string"
            order = 99
        }
    }
    vars.IcingaCheckMSSQLHealth_Switchparameter_NoPerfData = False
    vars.IcingaCheckMSSQLHealth_Switchparameter_IntegratedSecurity = False
}
