object CheckCommand "Invoke-IcingaCheckMSSQLPerfCounter" {
    import "PowerShell Base"

    arguments += {
        "-NoPerfData" = {
            set_if = "$IcingaCheckMSSQLPerfCounter_Switchparameter_NoPerfData$"
            order = 99
        }
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state 3: Identical to Verbose 2, but prints in addition the check package configuration e.g (All must be [OK])"
            value = "$IcingaCheckMSSQLPerfCounter_Int32_Verbosity$"
            order = 10
        }
        "-PerformanceCounter" = {
            description = "List of Performance Counters specified by their full path (example '\\SQLServer:Buffer Manager\\Buffer cache hit ratio') to fetch information for"
            value = {{
                var arr = macro("$IcingaCheckMSSQLPerfCounter_Array_PerformanceCounter$");
                    if (len(arr) == 0) {
                        return "@()";
                    }
                    return arr.map(
                        x => if (typeof(x) == String) {
                            var argLen = len(x);
                            if (argLen != 0 && x.substr(0,1) == "'" && x.substr(argLen - 1, argLen) == "'") {
                                x;
                            } else {
                                "'" + x + "'";
                            }
                        } else {
                            x;
                        }
                    ).join(",");
            }}
            order = 4
        }
        "-C" = {
            value = "try { Use-Icinga -Minimal; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; Write-Output 'Error:' $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable 'icinga-powershell-*' )`r`n'Module-Path:'`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command 'Invoke-IcingaCheckMSSQLPerfCounter' "
            order = 0
        }
        "-ThresholdInterval" = {
            description = "Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring."
            value = "$IcingaCheckMSSQLPerfCounter_String_ThresholdInterval$"
            order = 100
        }
        "-SqlPort" = {
            description = "The port of the MSSQL server/instance to connect to with the provided credentials"
            value = "$IcingaCheckMSSQLPerfCounter_Int32_SqlPort$"
            order = 8
        }
        "-Warning" = {
            description = "The warning threshold of the Performance Counter return values"
            value = "$IcingaCheckMSSQLPerfCounter_Object_Warning$"
            order = 2
        }
        "-IntegratedSecurity" = {
            set_if = "$IcingaCheckMSSQLPerfCounter_Switchparameter_IntegratedSecurity$"
            order = 99
        }
        "-SqlUsername" = {
            description = "The username for connecting to the MSSQL database"
            value = "$IcingaCheckMSSQLPerfCounter_String_SqlUsername$"
            order = 5
        }
        "-SqlHost" = {
            description = "The IP address or FQDN to the MSSQL server to connect to"
            value = "$IcingaCheckMSSQLPerfCounter_String_SqlHost$"
            order = 7
        }
        "-Critical" = {
            description = "The critical threshold of the Performance Counter return values"
            value = "$IcingaCheckMSSQLPerfCounter_Object_Critical$"
            order = 3
        }
        "-SqlPassword" = {
            description = "The password for connecting to the MSSQL database as secure string"
            value = "(ConvertTo-IcingaSecureString '$IcingaCheckMSSQLPerfCounter_Securestring_SqlPassword$')"
            order = 6
        }
        "-SqlDatabase" = {
            description = "The name of a specific database to connect to. Leave empty to connect 'globally'"
            value = "$IcingaCheckMSSQLPerfCounter_String_SqlDatabase$"
            order = 9
        }
    }
    vars.IcingaCheckMSSQLPerfCounter_Switchparameter_NoPerfData = false
    vars.IcingaCheckMSSQLPerfCounter_Switchparameter_IntegratedSecurity = false
}
